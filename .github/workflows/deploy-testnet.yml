name: Indexer Deployment - Testnet

on:
  push:
    branches:
      - feature/deployment

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        env: [neuroweb-testnet, base-testnet, gnosis-testnet]
        include:
          - env: neuroweb-testnet
            db_name: NERUOWEB_TESTNET_DB
            indexer_name: NEUROWEB_TESTNET_INDEXER_NAME
            rpc_endpoint: NEUROWEB_TESTNET_RPC_ENDPOINT
            start_block: NEUROWEB_TESTNET_START_BLOCK
            finality_confirmations: NEUROWEB_TESTNET_FINALITY_CONFIRMATIONS
            contracts: NEUROWEB_TESTNET_CONTRACTS
            archive: NEUROWEB_TESTNET_ARCHIVE
            
          - env: base-testnet
            db_name: BASE_TESTNET_DB
            indexer_name: BASE_TESTNET_INDEXER_NAME
            rpc_endpoint: BASE_TESTNET_RPC_ENDPOINT
            start_block: BASE_TESTNET_START_BLOCK
            finality_confirmations: BASE_TESTNET_FINALITY_CONFIRMATIONS
            contracts: BASE_TESTNET_CONTRACTS
            archive: BASE_TESTNET_ARCHIVE

          - env: gnosis-testnet
            db_name: GNOSIS_TESTNET_DB
            indexer_name: GNOSIS_TESTNET_INDEXER_NAME
            rpc_endpoint: GNOSIS_TESTNET_RPC_ENDPOINT
            start_block: GNOSIS_TESTNET_START_BLOCK
            finality_confirmations: GNOSIS_TESTNET_FINALITY_CONFIRMATIONS
            contracts: GNOSIS_TESTNET_CONTRACTS
            archive: GNOSIS_TESTNET_ARCHIVE

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setting environment variables
        run: |
          echo "Building and deploying indexer for ${{ matrix.env }}"
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets[matrix.db_name] }}" >> $GITHUB_ENV
          echo "INDEXER_NAME=${{ secrets[matrix.indexer_name] }}" >> $GITHUB_ENV
          echo "RPC_ENDPOINT=${{ secrets[matrix.rpc_endpoint] }}" >> $GITHUB_ENV
          echo "START_BLOCK=${{ secrets[matrix.start_block] }}" >> $GITHUB_ENV
          echo "FINALITY_CONFIRMATIONS=${{ secrets[matrix.finality_confirmations] }}" >> $GITHUB_ENV
          echo "CONTRACTS=${{ secrets[matrix.contracts] }}" >> $GITHUB_ENV
          echo "ARCHIVE=${{ secrets[matrix.archive] }}" >> $GITHUB_ENV

      - name: Lowercase the repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      # - name: Build and push container image to registry
      #   uses: docker/build-push-action@9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f
      #   with:
      #     push: true
      #     tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
      #     file: ./Dockerfile

      - name: Build and deploy
        run: |
          docker compose -f docker-compose.yml -p ${{ matrix.env }}-indexer build indexer
          docker compose -f docker-compose.yml -p ${{ matrix.env }}-indexer up indexer -d

  # deploy:
  #   runs-on: ubuntu-latest

  #   needs: build

  #   steps:
  #     - name: Lowercase the repo name
  #       run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #         images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
